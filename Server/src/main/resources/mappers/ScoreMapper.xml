<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huiyong.dao.ScoreMapper" >
  <resultMap id="ScoreResultMap" type="com.huiyong.model.score.Score" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="paper_id" property="paperId" jdbcType="INTEGER" />
    <result column="scorer" property="scorer" jdbcType="VARCHAR" />
    <result column="scoree" property="scoree" jdbcType="VARCHAR" />
    <result column="point" property="point" jdbcType="INTEGER" />
    <result column="lastModifiedTime" property="lastModifiedTime" jdbcType="TIMESTAMP" />
    <collection property="scores" column="id" javaType="ArrayList" ofType="ScoreItemResult" select="com.huiyong.dao.ScoreItemResultMapper.getItemResultByScoreId" />
  </resultMap> 
  <resultMap id="ScorePointResultMap" type="com.huiyong.model.score.ScorePoint" >
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="selfPoint" property="selfPoint" jdbcType="INTEGER" />
    <result column="otherPoint" property="otherPoint" jdbcType="INTEGER" />
  </resultMap>
  <select id="getScoreByUser" resultMap="ScoreResultMap">
        SELECT *
        FROM PaperScore PS
    	where PS.scoree=#{username}  
        order by lastModifiedTime
        <if test="recent==true ">  
        LIMIT 1
        </if>  
        ;
  </select>
  <select id="getScoreByScorer" resultMap="ScoreResultMap">
        SELECT *
        FROM PaperScore PS
    	where PS.scoree=#{username} and PS.scorer=#{socrername}
        order by lastModifiedTime
        <if test="recent==true ">  
        LIMIT 1
        </if>  
        ;
  </select>
	<select id="getScorePointByBranch" parameterType="String" resultMap="ScorePointResultMap">
		select U.name username, U.realName realname, OS.selfPoint selfPoint, OP.otherPoint
		otherPoint,OS.lastModifiedTime 
		from User U LEFT JOIN (
		select PSOTHER.scoree, avg(PSOTHER.point) otherPoint
		from PaperScore PSOTHER
		where PSOTHER.scorer !=PSOTHER.scoree group by
		PSOTHER.scoree
		) OP on U.name=OP.scoree LEFT JOIN (
		select PSSELF.scoree, PSSELF.point selfPoint,PSSELF.lastModifiedTime 
		from PaperScore PSSELF
		where PSSELF.scoree=PSSELF.scorer
		) OS on U.name=OS.scoree
		where U.branch=#{branch};
	</select>
	
	<select id="getScorePointByBranchAndScorer" resultMap="ScorePointResultMap">
	    select U.name username, U.realName realname, PS.point otherPoint, PS.lastModifiedTime
		from User U left join PaperScore PS
        on U.name=PS.scoree and PS.scorer=#{scorer}
		where U.branch=#{branch};
	</select>
	
    <select id="getScoreByOther" resultMap="ScoreResultMap">
        SELECT *
        FROM PaperScore PS
    	where PS.scoree=#{username} and PS.scorer != #{username}
            order by lastModifiedTime
        <if test="recent==true ">  
        LIMIT 1
        </if>  
        ;
	</select>
    <insert id="addScore" parameterType="Score" useGeneratedKeys="true" keyProperty="id">  
		INSERT INTO PaperScore (scorer, scoree, point, lastModifiedTime, paper_id)
        VALUES
		(#{scorer}, #{scoree}, #{point}, #{lastModifiedTime}, #{paperId} )
   </insert>  
   <update id="updateScore" parameterType="Score">  
		UPDATE PaperScore PS SET
		PS.point = #{point},
		PS.lastModifiedTime=#{lastModifiedTime}
	    WHERE PS.id=#{id}
   </update> 
 </mapper>